# -*- coding: utf-8 -*-
"""supervised_ML_SparkFoundation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dLnYdsRQ1Xpdufb_92dr56Mrw3p6A5Qa
"""

import pandas as pd  
import numpy as np    
import matplotlib.pyplot as plt

url = "http://bit.ly/w-data"
s_data = pd.read_csv(url)
print("Data imported successfully")
s_data

s_data.plot(x='Hours', y='Scores', style='x')    
plt.title('Hours vs Percentage')    
plt.xlabel('The Hours Studied')    
plt.ylabel('The Percentage Score')    
plt.show()

X = s_data.iloc[:, :-1].values  
Y = s_data.iloc[:, 1].values

from sklearn.model_selection import train_test_split    
X_train, X_test, Y_train, Y_test = train_test_split(X, Y,test_size=0.2, random_state=0)

from sklearn.linear_model import LinearRegression    
regressor = LinearRegression()    
regressor.fit(X_train, Y_train)   
  
print("Training ... Completed !.")

line = (regressor.coef_)*(X)+(regressor.intercept_)  #y = mx + c
plt.scatter(X, Y)  
plt.plot(X, line)
plt.show()

print(X_test)   
Y_pred = regressor.predict(X_test)

data_frame = pd.DataFrame({'Actual': Y_test, 'Predicted': Y_pred})    
data_frame

from sklearn import metrics  
print('Mean Absolute Error:', 
      metrics.mean_absolute_error(Y_test, Y_pred))